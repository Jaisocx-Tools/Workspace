
  //@preprocess templates texts: placeholders never parse texts, 
  // just set multidimArray[ref] = .methodAnyToTextToArrayOfChars ( variable placeholder from json in the .render() method )
  // 1. 


  //@whyTheBest 
  //              The main aim of the Poject with this ts tool is to be able to style on site big Json data over 100 MB.
  //              The need is not known, but why not to code the lib with this feature)) 
  //              when developing, data can be not yet paged like in productive mode sites, and the site can do, even when https json response of very big size.
  // 
  //              I try to reduce copies by value of the texts when concatenating, 
  //              and number of the texts bufs reallocations when growing concatenated, 
  //              since the copying, too, and every text symbol.
  //              Uint16Array class exemplar is an art of js class Object, 
  //              and is being copied by reference, 
  //              what is then one variable of 64 bits or fewer assigned the entire text 
  //              ( when a text 50 symbols long this is 20 times nicer when copied once. 
  //              and then every time the copy made or a variable assigned, times 20, 
  //              or set as an array elem)
  //@purpose 
  getArrayOfChars( value: any ): Uint16Array;


  // Avoid innerHTML when inserting many elements (use DocumentFragment)
  // charcode table array example: [key: number] = "A";
  // when a symbol, I have to sort fast the symbols, and I can not today, since the algo not written yet.
  // and impl fast search algorythm.



  // when with char code from symbols table array with poionter,
  // and there was no symbol set,
  // another method to invoke .fillCharcodeRange( charcode: number(2bytes) ) 
  // this class constructor() invokes similar to .fillCharcodeRange for small charcode ranges, with these the texts often published on sites.
  getTextFromArrrayOfChars( chars: Uint16Array ): string;


  // 
  fillCharcodeRange( charcode: number ): undefined;

  fillCharcodeRangeByCountryCode(): undefined;





  